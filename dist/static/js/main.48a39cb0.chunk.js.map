{"version":3,"sources":["components/layout/SignedInLinks.jsx","components/layout/SignedOutLinks.jsx","components/layout/NavBar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/DashBoard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/reducers/rootReducer.jsx","configs/fbConfig.jsx","components/exceptions/OperationFailed.jsx","components/exceptions/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","firebase","useFirebase","initials","useSelector","state","profile","className","to","onClick","logout","then","console","log","catch","err","SignedOutLinks","NavBar","showLinks","auth","uid","Notifications","useFirestoreConnect","collection","limit","orderBy","notifications","firestore","ordered","isLoaded","isEmpty","displayNotice","map","n","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","authorLastName","authroFirstName","createdAt","title","calendar","ProjectList","projects","projectList","p","DashBoard","ProjectDetails","props","useFirestore","match","params","find","authorFirstName","toString","delete","handleDelete","SignIn","history","userCredential","email","password","handleChange","e","target","value","action","onSubmit","preventDefault","login","push","htmlFor","type","onChange","SignUp","userProfile","firstName","lastName","handleCredentialChange","handleProfileChange","createUser","CreateProject","authorId","Date","add","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","OperationFailed","NotFound","store","createStore","rrfProps","config","useFirestoreForProfile","dispatch","createFirestoreInstance","App","exact","path","component","from","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48a39cb0.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst SignedInLinks = () => {\n  const firebase = useFirebase();\n  const { initials } = useSelector(state => state.firebase.profile);\n\n  // console.log(userProfile);\n  const handleLogOut = () => {\n    firebase\n      .logout()\n      .then(() => {\n        console.log(\"successfully loged out\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New project</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" onClick={handleLogOut}>\n          log out\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedInLinks;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { useSelector } from \"react-redux\";\n\nconst NavBar = () => {\n  const auth = useSelector(state => state.firebase.auth);\n  // console.log(auth);\n  const showLinks = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Binggan Plan\n        </Link>\n        {showLinks}\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport moment from \"moment\";\n\nconst Notifications = ({}) => {\n  useFirestoreConnect([\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ]);\n  const notifications = useSelector(\n    state => state.firestore.ordered.notifications\n  );\n  if (!isLoaded(notifications)) {\n    return <div>loading notifications....</div>;\n  }\n  if (isEmpty(notifications)) {\n    return <div>no notification!</div>;\n  }\n  const displayNotice = notifications.map(n => {\n    return (\n      <li key={n.id}>\n        <span className=\"pink-text\">{n.user} </span>\n        <span>{n.content}</span>\n        <div className=\"grey-text note-date\">\n          {moment(n.time.toDate()).fromNow()}\n        </div>\n      </li>\n    );\n  });\n  return (\n    <div className=\"section transbox\">\n      <div className=\"z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"car-title\">Notifications</span>\n          <ul className=\"notification\">{displayNotice}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  const { authorLastName, authroFirstName, createdAt } = project;\n  return (\n    <div className=\"card z-depth-0 project-summary transbox\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          posted by {authorLastName} {authroFirstName}\n        </p>\n        <p className=\"grey-text\">{moment(createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { useFirestoreConnect, isEmpty, isLoaded } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = () => {\n  useFirestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] }\n  ]);\n  const projects = useSelector(state => state.firestore.ordered.projects);\n  if (!isLoaded(projects)) {\n    return <div>loading....</div>;\n  }\n  if (isEmpty(projects)) {\n    return <div>Now projects available</div>;\n  }\n  // console.log(projects);\n  const projectList = projects.map(p => (\n    <Link to={\"/project/\" + p.id} key={p.id}>\n      <ProjectSummary project={p} />\n    </Link>\n  ));\n  return <div className=\"project-list section\">{projectList}</div>;\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n// import { connect } from \"react-redux\";\n// import RedirectSignedOut from \"../../utils/redirectSignedOut\";\n\nconst DashBoard = () => {\n  // const firebase = useFirebase();\n  const auth = useSelector(state => state.firebase.auth);\n  if (isLoaded(auth)) {\n    if (!auth.uid) {\n      console.log(\"uid is not exisssst\");\n      return <Redirect to=\"/signup\" />;\n    }\n  }\n  // console.log(this.props);\n  // const { projects } = this.props;\n  // console.log(projects);\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          {/* <SomeComponent /> */}\n          <ProjectList />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notifications />\n        </div>\n      </div>\n    </div>\n  );\n};\n// const mapStateToProps = state => {\n//   // console.log(state);\n//   return {\n//     projects: state.project.projects\n//   };\n// };\n\n// const mapDispatchToProps = {};\nexport default DashBoard;\n\n// export default connect(mapStateToProps)(DashBoard);\n","import React from \"react\";\nimport {\n  useFirestoreConnect,\n  isLoaded,\n  useFirestore\n} from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"@firebase/util\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  useFirestoreConnect([{ collection: \"projects\" }]);\n  const firestore = useFirestore();\n  const projects = useSelector(state => state.firestore.ordered.projects);\n  const auth = useSelector(state => state.firebase.auth);\n\n  if (!isLoaded(auth)) {\n    return <h2>Project Details are Loading....</h2>;\n  } else {\n    if (!auth.uid) {\n      console.log(\"uid is not exist\");\n      return <Redirect to=\"/signup\" />;\n    }\n  }\n\n  if (!isLoaded(projects)) {\n    return <div>Loading...</div>;\n  }\n  if (isEmpty(projects)) {\n    return <div>some thing went wrong</div>;\n  }\n  // console.log(projects);\n  // console.log(props);\n  const id = props.match.params.id;\n  // console.log(id);\n  const project = projects.find(p => p.id === id);\n  // console.log(project);\n  const {\n    title,\n    content,\n    authorFirstName,\n    authorLastName,\n    createdAt\n  } = project;\n\n  console.log(createdAt.toDate().toString());\n  const handleDelete = id => {\n    console.log(\"want to delete:\" + id);\n    firestore\n      .delete(\"projects/\" + id)\n      .then(() => {\n        console.log(\"delete complete\");\n      })\n      .catch(err => {\n        console.log(err);\n        return <Redirect to=\"/failed\" />;\n      });\n  };\n\n  return (\n    <div className=\"container section project-details\">\n      <div className=\"card-content\">\n        <div className=\"card-title\">{title}</div>\n        <div>{content}</div>\n      </div>\n      <div className=\"card-action lighten-4 grey-text\">\n        <div>\n          create by {authorFirstName} {authorLastName}\n        </div>\n        <div>{moment(createdAt.toDate()).calendar()}</div>\n      </div>\n      <Link to=\"/\">\n        <button onClick={() => handleDelete(id)}>Delete</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default ProjectDetails;\n","import React from \"react\";\nimport { useFirebase, isLoaded } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst SignIn = ({ history }) => {\n  const firebase = useFirebase();\n  const auth = useSelector(state => state.firebase.auth);\n\n  if (!isLoaded(auth)) {\n    return <h2>Loading....</h2>;\n  }\n  // if (isLoaded(auth)) {\n  if (auth.uid) {\n    console.log(\"uid is not exisssst\");\n    return <Redirect to=\"/\" />;\n  }\n  // }\n\n  const userCredential = {\n    email: \"\",\n    password: \"\"\n  };\n  const handleChange = e => {\n    userCredential[e.target.id] = e.target.value;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(userCredential);\n    firebase\n      .login(userCredential)\n      .then(() => {\n        console.log(\"log success\");\n        history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <form action=\"\" className=\"transbox\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">password</label>\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useFirebase, isLoaded } from \"react-redux-firebase\";\n\nconst SignUp = () => {\n  const firebase = useFirebase();\n  const auth = useSelector(state => state.firebase.auth);\n  // const fire = useSelector(state => state.firebase);\n  // console.log(fire);\n  if (!isLoaded(auth)) {\n    return <h2>Loading.....</h2>;\n  }\n\n  // if (isLoaded(auth)) {\n  if (auth.uid) {\n    console.log(\"uid is not exisssst\");\n    return <Redirect to=\"/\" />;\n  }\n  // }\n\n  const userCredential = {\n    email: \"\",\n    password: \"\"\n  };\n  const userProfile = {\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  const handleCredentialChange = e => {\n    // console.log(e.target.id);\n    const { id, value } = e.target;\n    userCredential[id] = value;\n  };\n  const handleProfileChange = e => {\n    // console.log(e.target.value);\n    const { id, value } = e.target;\n    userProfile[id] = value;\n  };\n  const handleChange = e => {\n    handleCredentialChange(e);\n    handleProfileChange(e);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    userProfile.initials = userProfile.firstName[0] + userProfile.lastName[0];\n    // console.log(userProfile);\n    // console.log(userCredential);\n    firebase\n      .createUser(userCredential, userProfile)\n      .then(() => {\n        console.log(\"successfully create a user\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"container\">\n      <form action=\"\" className=\"transbox\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={handleCredentialChange}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input type=\"text\" id=\"firstName\" onChange={handleProfileChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input type=\"text\" id=\"lastName\" onChange={handleProfileChange} />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport { useFirestore, isLoaded } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n// import RedirectSignedOut from \"../../utils/redirectSignedOut\";\n\nconst CreateProject = ({ history }) => {\n  const firestore = useFirestore();\n  const auth = useSelector(state => state.firebase.auth);\n  const { firstName, lastName } = useSelector(state => state.firebase.profile);\n  // console.log(firstName, lastName);\n  if (isLoaded(auth)) {\n    if (!auth.uid) {\n      console.log(\"uid is not exisssst\");\n      return <Redirect to=\"/signup\" />;\n    }\n  } else {\n    return <h2>Loading....</h2>;\n  }\n\n  const project = {\n    title: \"\",\n    content: \"\",\n    authorFirstName: firstName,\n    authorLastName: lastName,\n    authorId: auth.uid,\n    createdAt: null\n  };\n  // console.log(project.authorLastName, project.authorFirstName);\n  const handleChange = e => {\n    // this.setState({ [e.target.id]: e.target.value });\n    project[e.target.id] = e.target.value;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(\"passing this.state to createProject in mTop\", this.state);\n    // console.log(this.props);\n    // this.props.createp(this.state);\n    project.createdAt = new Date();\n    firestore\n      .collection(\"projects\")\n      .add(project)\n      .then(() => {\n        console.log(\"succefully created\");\n        history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      {/* {RedirectSignedOut()} */}\n      <form className=\"transbox\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" onChange={handleChange} />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\">Content</label>\n          <textarea\n            className=\"materialize-textarea\"\n            id=\"content\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// const mapStateToProps = state => ({});\n\n// const mapDispatchToProps = dispatch => {\n//   // console.log(\"mapdispatchtoprops called\");\n//   return {\n//     createp: project => {\n//       dispatch(createProject(project));\n//     }\n//   };\n// };\n\n// export default connect(null, mapDispatchToProps)(CreateProject);\nexport default CreateProject;\n","// import authReducer from \"./authReducer\";\n// import projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n  // auth: authReducer\n  // project: projectReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDJ8flQbigU2jHTuy5PnHy0d5GnjvYhGOw\",\n  authDomain: \"binggan-plan.firebaseapp.com\",\n  databaseURL: \"https://binggan-plan.firebaseio.com\",\n  projectId: \"binggan-plan\",\n  storageBucket: \"binggan-plan.appspot.com\",\n  messagingSenderId: \"523718687748\",\n  appId: \"1:523718687748:web:ac97d75a85cc45d6448951\",\n  measurementId: \"G-XJEQT1XQLK\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nfirebase.analytics();\nfirebase.auth();\n\nexport default firebase;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst OperationFailed = () => {\n  return (\n    <div>\n      <h2>Some thing went wrong click button to go home</h2>\n      <Link to=\"/home\">\n        <button>Home</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default OperationFailed;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>Page not Found click to go home</h2>\n      <Link to=\"/home\">\n        <button>Home</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/layout/NavBar\";\nimport DashBoard from \"./components/dashboard/DashBoard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebase from \"./configs/fbConfig\";\nimport OperationFailed from \"./components/exceptions/OperationFailed\";\nimport NotFound from \"./components/exceptions/NotFound\";\n\nconst store = createStore(rootReducer);\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true\n  // enableClaims: true\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <BrowserRouter>\n          <article>\n            <div className=\"App\">\n              <NavBar />\n              <Switch>\n                <Route exact path=\"/home\" component={DashBoard}></Route>\n                <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n                <Route path=\"/signin\" component={SignIn}></Route>\n                <Route path=\"/signup\" component={SignUp}></Route>\n                <Route path=\"/create\" component={CreateProject}></Route>\n                <Route path=\"/failed\" component={OperationFailed}></Route>\n                <Route path=\"/not-found\" component={NotFound}></Route>\n                <Redirect from=\"/\" exact to=\"/home\"></Redirect>\n                <Redirect to=\"/not-found\"></Redirect>\n              </Switch>\n            </div>\n          </article>\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}